class Node {
    public:
    string data;
    Node* next;
    Node* prev;
    public:
    Node(string data1,Node* next1,Node* prev1){ // If Val, next and prev pointers are passed
        data = data1;
        next = next1;
        prev = prev1;
    }
    Node(){ //If no values are passed
        data = "0";
        next = nullptr;
        prev = nullptr;
    }
    Node(string data1){ // If only val value is passed at the time of declaration
        data = data1;
        next = nullptr;
        prev = nullptr;
    }
};

class BrowserHistory {
    Node* currentPage; // Declaring the current page
public:
    BrowserHistory(string homepage) {
        currentPage = new Node(homepage); // Assigning home page as current page
    }
    
    void visit(string url) { // Assigning next node of current page as the visit url
        Node* newNode = new Node(url);
        currentPage->next = newNode;
        newNode->prev = currentPage;
        currentPage = newNode;
    }
    
    string back(int steps) { // We only traverse until the currentNode becomes NULL
        while(steps--){
            if(currentPage->prev){
                currentPage = currentPage->prev;
            }
            else break;
        }
        return currentPage->data;
    }
    
    string forward(int steps) { // We only traverse until the currentNode becomes NULL
        while(steps--){
            if(currentPage->next){
                currentPage = currentPage->next;
            }
            else break;
        }
        return currentPage->data;
    }
};

/**
 * Your BrowserHistory object will be instantiated and called as such:
 * BrowserHistory* obj = new BrowserHistory(homepage);
 * obj->visit(url);
 * string param_2 = obj->back(steps);
 * string param_3 = obj->forward(steps);
 */
