class Solution {
public:
    int mySqrt(int x) {
        if(x==0||x==1)return x; // Square root of 0 and 1 are themselves
        long long start = 2; // Since the square root of a number will always be in between 2
        long long end = x-1; // ^and the number itself
        long long ans = 1; // For the case when x = 2
        while(start<=end){
            long long mid = start + (end-start)/2;
            if(mid*mid <= x){
             ans = mid;
             start = mid + 1; // Increasing the value until we find the maximum and closest value to x
            }
            else{
                end = mid-1; // If the current product is greater than x then obviously we need to reduce our current number
            }
        }
        return (int)ans; // We took long long so as to accomodate multiplication of large integer values
    }
};
