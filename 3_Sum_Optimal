class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(),nums.end()); // This ensures only unique groups are pushed in the answer array
        vector<vector<int>>ans;
        for(int i=0;i<n;i++){
            if(i > 0 && nums[i-1]==nums[i])continue; // So as to skip similar/ common consecutive elements
            int j = i+1;
            int k = n-1;
            while(j<k){
                int sum = nums[i] + nums[j] + nums[k];
                if(sum > 0){
                    k--;
                }
                else if(sum < 0){
                    j++;
                }
                else{
                    vector<int>temp = {nums[i],nums[j],nums[k]};
                    ans.push_back(temp);
                    j++;
                    k--;
                    while(j < k && nums[j-1] == nums[j])j++; // So as to skip similar/ common consecutive elements
                    while(j < k && nums[k+1] == nums[j])k--; // So as to skip similar/ common consecutive elements
                }
            }
        }
        return ans;
    }
};
