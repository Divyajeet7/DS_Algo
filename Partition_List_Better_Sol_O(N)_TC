/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        if(head == NULL || head->next == nullptr)return head;
        ListNode* curr = head;
        ListNode* ans = new ListNode(-1);
        ListNode* ansMover = ans;
        while(curr){
            if(curr->val < x){
                ansMover->next = new ListNode(curr->val);
                ansMover = ansMover->next;
            }
            curr = curr->next;
        }
        curr = head;
        while(curr){
            if(curr->val >= x){
                ansMover->next = new ListNode(curr->val);
                ansMover = ansMover->next;
            }
            curr = curr->next;
        }
        ansMover = ans->next;
        curr = head;
        while(curr){
            curr->val = ansMover->val;
            curr = curr->next;
            ansMover = ansMover->next;
        }
        delete(ans);
        return head;
    }
};
