class Solution {
public:
    int trap(vector<int>& height) {
        //BRUTE
        vector<int>temp1; // This array stores the max height left of each of the current spot
        vector<int>temp2; // This array stores the max height right of each of the current spot
        int currMax = 0;
        int area = 0;
        for(int i=0;i<height.size();i++){
            temp1.push_back(currMax);
            currMax = max(height[i],currMax);
        }
        currMax = 0;
        for(int i=height.size()-1;i>=0;i--){
            temp2.push_back(currMax);
            currMax = max(height[i],currMax);
        }
        reverse(temp2.begin(),temp2.end());
        for(int i=1;i<height.size()-1;i++){
            int tempArea = min(temp1[i],temp2[i]) - height[i];
            if(tempArea > 0)area += tempArea; // handling negative values, only adding the positive ones
        }
        return area;
    }
};
