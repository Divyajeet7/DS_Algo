/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rev(ListNode* curr){
        ListNode* p = curr;
        ListNode* q = NULL;
        ListNode* r = NULL;
        while(p!=NULL){
            r = q;
            q = p;
            p = p->next;
            q->next = r;
        }
        return q;
    }
    void reorderList(ListNode* head) {
        if(head == NULL || head->next == nullptr || head->next->next == nullptr)return;
        ListNode* slow = head;
        ListNode* fast = head->next;
        while(fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* leftList = head;
        ListNode* rightList = rev(slow->next);
        slow->next = nullptr;
        while(rightList){
            ListNode* temp1 = leftList->next;
            ListNode* temp2 = rightList->next;
            leftList->next = rightList;
            rightList->next = temp1;
            leftList = temp1;
            rightList = temp2;
        }
    }
};
