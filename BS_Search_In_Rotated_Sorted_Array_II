class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int start = 0;
        int end = nums.size()-1;
        while(start<=end){
            int mid = start + (end-start)/2;
            if(nums[mid]==target)return true;
            else if(nums[start]==nums[end]&&nums[start]!=target){ // Only diff b/w rotated sorted array 1
                start++;
                end--;
            }
            else if(nums[start]<=nums[mid]){ // Left half is sorted
                if(nums[start]<=target && target<=nums[mid]){ // If target exists in this half
                    end = mid-1;
                }
                else{ // Else target exists in this half
                    start = mid+1;
                }
            }
            else{ // Right half is sorted
                if(nums[mid] <= target && target <= nums[end]){ // If target exists in this half
                    start = mid+1;
                }
                else{ // Else target exists in this half
                    end = mid-1;
                }
            }
        }
        return false;
    }
};
